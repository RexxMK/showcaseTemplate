{"version":3,"file":"AfterAugust-C7JkAjGk.js","sources":["../../../../components/VideoBorder.vue","../../../../pages/AfterAugust.vue"],"sourcesContent":["<template>\n  <div class=\"c-video-border\">\n    <!-- MOBIL -->\n    <div v-if=\"isMobile\">\n      <div class=\"flex justify-center\">\n        <div v-if=\"mobile.src\" class=\"b-solid b-detail\">\n          <video\n            ref=\"videoPlayer\"\n            :src=\"mobile.src\"\n            class=\"w-[330px] cursor-pointer m-[8px]\"\n            @click=\"toggleVideo\"\n            autoplay\n            muted\n            loop\n          ></video>\n        </div>\n      </div>\n    </div>\n\n    <!-- LAPTOP -->\n    <div v-else>\n      <div class=\"flex justify-center\">\n        <div v-if=\"laptop.src\" class=\"b-solid b-2 b-detail\">\n          <video\n            ref=\"videoPlayer\"\n            :src=\"laptop.src\"\n            class=\"w-[1100px] cursor-pointer m-[14px]\"\n            @click=\"toggleVideo\"\n            autoplay\n            muted\n            loop\n          ></video>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\ndefineProps({\n  laptop: Object,\n  mobile: Object,\n});\n\nconst videoPlayer = ref(null);\n\nconst toggleVideo = () => {\n  if (videoPlayer.value.paused) {\n    videoPlayer.value.play();\n  } else {\n    videoPlayer.value.pause();\n  }\n};\n\n// 'ref' bruges til at lave en reaktiv variabel 'isMobile', der som udgangspunkt er falsk.\nconst isMobile = ref(false);\n// 'onMounted' hooket bruges til køre en funktion, når komponentet er blev sat ind.\n// Funktionen kontrollerer vinduets bredde. Hvis bredden er mindre end 768 pixels, så opdateres 'isMobile' til sand.\nonMounted(() => {\n  if (window.innerWidth < 768) {\n    isMobile.value = true;\n  }\n});\n</script>\n","<template>\n  <div class=\"afterAugust bg-primary\">\n    <!-- MOBIL -->\n    <div v-if=\"isMobile\" class=\"flex flex-col gap-y-[165px] pb-[165px]\">\n      <PageHero v-bind=\"{ ...page.hero }\" :teaserMaxWidth=\"teaserMaxWidth\" />\n      <VideoBorder v-bind=\"{ ...page.borderVideo.intro }\" />\n      <ImageSlider v-bind=\"{ ...page.imageSlider }\" />\n      <ScrollGallery v-bind=\"{ ...page.scrollGallery }\" />\n      <VideoBorder v-bind=\"{ ...page.borderVideo.story }\" />\n      <ImageGallery v-bind=\"{ ...page.imageGallery }\" :sliceAmount=\"2\" />\n      <VideoBorder v-bind=\"{ ...page.borderVideo.outro }\" />\n    </div>\n\n    <!-- LAPTOP -->\n    <div v-else class=\"flex flex-col gap-y-[360px] pb-[360px]\">\n      <PageHero v-bind=\"{ ...page.hero }\" />\n      <VideoBorder v-bind=\"{ ...page.borderVideo.intro }\" />\n      <ImageSlider v-bind=\"{ ...page.imageSlider }\" />\n      <ScrollGallery v-bind=\"{ ...page.scrollGallery }\" />\n      <VideoBorder v-bind=\"{ ...page.borderVideo.story }\" />\n      <ImageGallery v-bind=\"{ ...page.imageGallery }\" :sliceAmount=\"3\" />\n      <VideoBorder v-bind=\"{ ...page.borderVideo.outro }\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport pageData from \"/pageData.json\";\nimport PageHero from \"../components/PageHero.vue\";\nimport ScrollGallery from \"../components/ScrollGallery.vue\";\nimport VideoBorder from \"../components/VideoBorder.vue\";\n\nconst page = ref(pageData.afterAugust);\n\nconst teaserMaxWidth = ref(\"max-w-27ch\");\n\n// Koden i linje 41-50 indeholder den funktion der skal bruges i løsningen generelt.\n// Jeg har valgt at bruge en anden funktion til at aflæse viewportstørrelsen af siden i forbindelse med hovedopgaven\n// På den måde sker skiftet til mobilvisningen automatisk uden der er behov for reload af siden\n\n// 'ref' bruges til at lave en reaktiv variabel 'isMobile', der som udgangspunkt er falsk.\n// const isMobile = ref(false);\n\n// 'onMounted' hooket bruges til køre en funktion, når komponentet er blev sat ind.\n// Funktionen kontrollerer vinduets bredde. Hvis bredden er mindre end 768 pixels, så opdateres 'isMobile' til sand.\n// onMounted(() => {\n//   if (window.innerWidth < 768) {\n//     isMobile.value = true;\n//   }\n// });\n\nconst isMobile = ref(false);\n\nconst updateIsMobile = () => {\n  isMobile.value = window.innerWidth < 768;\n};\n\nonMounted(() => {\n  updateIsMobile(); // Opdaterer ved start, baseret på vinduets bredde\n  window.addEventListener(\"resize\", updateIsMobile); // Lytter efter vinduesændringer\n});\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;AA4CoB,QAAI,IAAI;AAWtB,UAAA,WAAW,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBpB,UAAA,OAAO,IAAI,SAAS,WAAW;AAE/B,UAAA,iBAAiB,IAAI,YAAY;AAiBjC,UAAA,WAAW,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}