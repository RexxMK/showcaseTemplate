{"version":3,"file":"NotToScale-CS43K8br.js","sources":["../../../../components/ImageLong.vue","../../../../components/VideoStaggered.vue","../../../../components/CardModule.vue","../../../../pages/NotToScale.vue"],"sourcesContent":["<template>\n  <div class=\"c-image-long\">\n    <!-- MOBIL -->\n    <div v-if=\"isMobile\">\n      <div v-if=\"mobile\" class=\"flex justify-center\">\n        <img :src=\"mobile.src\" :alt=\"mobile.alt\" class=\"w-[330px]\" />\n      </div>\n    </div>\n\n    <!-- LAPTOP -->\n    <div v-else>\n      <div v-if=\"laptop\" class=\"flex justify-center\">\n        <img :src=\"laptop.src\" :alt=\"laptop.alt\" class=\"w-[1100px]\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\ndefineProps({\n  laptop: Object,\n  mobile: Object,\n});\n\n// 'ref' bruges til at lave en reaktiv variabel 'isMobile', der som udgangspunkt er falsk.\nconst isMobile = ref(false);\n\n// Funktionen updateIsMobile ser på bredden (clientWidth) af den synlige del af HTML-dokumentet.\n// Hvis bredden er under 768 pixels, betragtes det som en mobilskærm, og 'isMobile' opdateres til sand.\nconst updateIsMobile = () => {\n  isMobile.value = document.documentElement.clientWidth < 768;\n};\n\nonMounted(() => {\n  updateIsMobile(); // Opdaterer ved start, baseret på vinduets bredde\n  window.addEventListener(\"resize\", updateIsMobile); // Lytter efter vinduesændringer\n});\n</script>\n","<template>\n  <div class=\"c-video-staggered\">\n    <!-- MOBIL -->\n    <div v-if=\"isMobile\">\n      <div class=\"flex justify-center\">\n        <div\n          v-if=\"mobile.src\"\n          class=\"bg-primary-variant w-[320px] h-[612px] pt-[10px] pl-[11px]\"\n        >\n          <video\n            ref=\"videoPlayer\"\n            :src=\"mobile.src\"\n            class=\"w-[330px] cursor-pointer\"\n            @click=\"toggleVideo\"\n            autoplay\n            muted\n            loop\n          ></video>\n        </div>\n      </div>\n    </div>\n\n    <!-- LAPTOP -->\n    <div v-else>\n      <div class=\"flex justify-center\">\n        <div\n          v-if=\"laptop.src\"\n          class=\"bg-primary-variant w-[1070px] h-[630px] pt-[30px] pl-[30px]\"\n        >\n          <video\n            ref=\"videoPlayer\"\n            :src=\"laptop.src\"\n            class=\"w-[1100px] cursor-pointer\"\n            @click=\"toggleVideo\"\n            autoplay\n            muted\n            loop\n          ></video>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\ndefineProps({\n  laptop: Object,\n  mobile: Object,\n});\n\nconst videoPlayer = ref(null);\n\nconst toggleVideo = () => {\n  if (videoPlayer.value.paused) {\n    videoPlayer.value.play();\n  } else {\n    videoPlayer.value.pause();\n  }\n};\n\n// 'ref' bruges til at lave en reaktiv variabel 'isMobile', der som udgangspunkt er falsk.\nconst isMobile = ref(false);\n\n// Funktionen updateIsMobile ser på bredden (clientWidth) af den synlige del af HTML-dokumentet.\n// Hvis bredden er under 768 pixels, betragtes det som en mobilskærm, og 'isMobile' opdateres til sand.\nconst updateIsMobile = () => {\n  isMobile.value = document.documentElement.clientWidth < 768;\n};\n\nonMounted(() => {\n  updateIsMobile(); // Opdaterer ved start, baseret på vinduets bredde\n  window.addEventListener(\"resize\", updateIsMobile); // Lytter efter vinduesændringer\n});\n</script>\n","<template>\n  <!-- Her bruger jeg Vue's bindingssyntax ':class' til at tilføje en dynamisk CSS-klasse baseret på bestemte tilstande -->\n  <!-- Dvs. at hvis 'isMobile' er falsk, og enten 'showLeftModule' eller 'showRightModule' er sand, -->\n  <!-- så vil CSS-klassen \"h-[1000px]\" blive tilføjet til elementet -->\n  <div\n    class=\"c-card-module\"\n    :class=\"{ 'h-[1000px]': !isMobile && (showLeftModule || showRightModule) }\"\n  >\n    <!-- MOBIL -->\n    <!-- Jeg bruger en if-sætning til at vise elementet på denne måde hvis 'isMobile' er sand. -->\n    <div v-if=\"isMobile\" class=\"flex flex-wrap gap-y-[49px] justify-center\">\n      <!-- Venstre kort mobil (øverste) -->\n      <div class=\"relative cursor-pointer\">\n        <div v-if=\"leftCard\" class=\"w-[346px]\" @click=\"toggleModule('left')\">\n          <img\n            :src=\"leftCard.src\"\n            :alt=\"leftCard.alt\"\n            class=\"w-[325px] absolute z-3\"\n            :class=\"{ clicked: showLeftModule }\"\n          />\n          <div\n            class=\"w-[325px] h-[194px] bg-secondary-variant absolute ml-[8px] mt-[8px] z-2\"\n          ></div>\n          <div\n            class=\"w-[325px] h-[194px] bg-secondary absolute ml-[16px] mt-[16px] z-1\"\n          ></div>\n        </div>\n      </div>\n\n      <!-- Venstre modul (øverste) -->\n      <div class=\"z-5 mt-[206px] overflow-hidden sliderShadow\">\n        <div v-if=\"showLeftModule\" class=\"w-full h-auto\">\n          <div class=\"flex gap-x-[13px] overflow-x-auto\">\n            <div v-for=\"(image, index) in leftModule.mobileImages\" :key=\"index\">\n              <img\n                :src=\"image.src\"\n                :alt=\"image.alt\"\n                class=\"w-auto h-[583px] sliderShadow\"\n              />\n            </div>\n            <div v-if=\"leftModule.mobileVideo\">\n              <video\n                ref=\"videoPlayer\"\n                :src=\"leftModule.mobileVideo.src\"\n                class=\"w-auto h-[583px] cursor-pointer sliderShadow\"\n                @click=\"toggleVideo\"\n                autoplay\n                muted\n                loop\n              ></video>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Højre kort (nederste) -->\n      <div class=\"relative cursor-pointer\">\n        <div v-if=\"rightCard\" class=\"w-[346px]\" @click=\"toggleModule('right')\">\n          <img\n            :src=\"rightCard.src\"\n            :alt=\"rightCard.alt\"\n            class=\"w-[325px] absolute z-3\"\n            :class=\"{ clicked: showRightModule }\"\n          />\n          <div\n            class=\"w-[325px] h-[194px] bg-secondary-variant absolute ml-[8px] mt-[8px] z-2\"\n          ></div>\n          <div\n            class=\"w-[325px] h-[194px] bg-secondary absolute ml-[16px] mt-[16px] z-1\"\n          ></div>\n        </div>\n      </div>\n\n      <!-- Højre modul (nederste) -->\n      <div class=\"z-5 mt-[206px] overflow-hidden sliderShadow\">\n        <div v-if=\"showRightModule\" class=\"w-full h-auto\">\n          <div class=\"flex gap-x-[13px] overflow-x-auto\">\n            <div\n              v-for=\"(image, index) in rightModule.mobileImages\"\n              :key=\"index\"\n            >\n              <img\n                :src=\"image.src\"\n                :alt=\"image.alt\"\n                class=\"w-[317px] h-auto sliderShadow\"\n              />\n            </div>\n            <div v-if=\"rightModule.mobileVideo\">\n              <video\n                ref=\"videoPlayer\"\n                :src=\"rightModule.mobileVideo.src\"\n                class=\"w-auto h-[583px] cursor-pointer sliderShadow\"\n                @click=\"toggleVideo\"\n                autoplay\n                muted\n                loop\n              ></video>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- LAPTOP -->\n    <!-- Hvis 'isMobile' er falsk vises elementet på følgende måde -->\n    <div v-else class=\"flex justify-center\">\n      <div class=\"flex justify-center w-[1100px] gap-x-[38px]\">\n        <!-- Venstre kort -->\n        <div class=\"relative cursor-pointer\">\n          <div\n            v-if=\"leftCard\"\n            class=\"w-[550px] h-[327px]\"\n            @click=\"toggleModule('left')\"\n          >\n            <img\n              :src=\"leftCard.src\"\n              :alt=\"leftCard.alt\"\n              class=\"cardContainer w-[550px] absolute z-3\"\n              :class=\"{ clicked: showLeftModule }\"\n            />\n            <div\n              class=\"w-[550px] h-[327px] bg-secondary-variant absolute top-0 ml-[10px] mt-[10px] z-2\"\n            ></div>\n            <div\n              class=\"w-[550px] h-[327px] bg-secondary absolute top-0 ml-[20px] mt-[20px] z-1\"\n            ></div>\n          </div>\n        </div>\n\n        <!-- Moduler -->\n        <div class=\"flex justify-center z-5 pt-[97px]\">\n          <!-- Venstre modul -->\n          <div\n            v-if=\"showLeftModule\"\n            class=\"w-[1449px] h-[882px] bg-primary-variant absolute overflow-y-auto rounded-10\"\n          >\n            <div class=\"flex flex-col items-center mt-[80px]\">\n              <div class=\"flex justify-center gap-x-[68px]\">\n                <div class=\"flex flex-col gap-y-[68px] h-full sticky top-0\">\n                  <div\n                    v-for=\"(image, index) in leftModule.mobileImages\"\n                    :key=\"index\"\n                  >\n                    <img :src=\"image.src\" :alt=\"image.alt\" class=\"w-[291px]\" />\n                  </div>\n                </div>\n                <div class=\"flex flex-col gap-y-[97px] h-full sticky top-0\">\n                  <div\n                    v-for=\"(image, index) in leftModule.laptopImages\"\n                    :key=\"index\"\n                  >\n                    <img :src=\"image.src\" :alt=\"image.alt\" class=\"w-[1019px]\" />\n                  </div>\n                </div>\n              </div>\n\n              <div v-if=\"leftModule.laptopVideo\" class=\"pt-[232px] pb-[80px]\">\n                <div class=\"w-[1100] h-[42px] bg-secondary\"></div>\n                <video\n                  ref=\"videoPlayer\"\n                  :src=\"leftModule.laptopVideo.src\"\n                  class=\"w-[1100px] cursor-pointer\"\n                  @click=\"toggleVideo\"\n                  autoplay\n                  muted\n                  loop\n                ></video>\n              </div>\n            </div>\n          </div>\n\n          <!-- Højre modul -->\n          <div\n            v-if=\"showRightModule\"\n            class=\"w-[1449px] h-[882px] bg-primary-variant absolute overflow-y-auto rounded-10\"\n          >\n            <div class=\"flex flex-col items-center mt-[80px]\">\n              <div class=\"flex justify-center gap-x-[68px]\">\n                <div class=\"flex flex-col gap-y-[68px] h-full sticky top-0\">\n                  <div\n                    v-for=\"(image, index) in rightModule.mobileImages\"\n                    :key=\"index\"\n                  >\n                    <img :src=\"image.src\" :alt=\"image.alt\" class=\"w-[291px]\" />\n                  </div>\n                </div>\n                <div class=\"flex flex-col gap-y-[97px] h-full sticky top-0\">\n                  <div\n                    v-for=\"(image, index) in rightModule.laptopImages\"\n                    :key=\"index\"\n                  >\n                    <img :src=\"image.src\" :alt=\"image.alt\" class=\"w-[1019px]\" />\n                  </div>\n                </div>\n              </div>\n\n              <div v-if=\"rightModule.laptopVideo\" class=\"pt-[232px] pb-[80px]\">\n                <div class=\"w-[1100] h-[42px] bg-secondary\"></div>\n                <video\n                  ref=\"videoPlayer\"\n                  :src=\"rightModule.laptopVideo.src\"\n                  class=\"w-[1100px] cursor-pointer\"\n                  @click=\"toggleVideo\"\n                  autoplay\n                  muted\n                  loop\n                ></video>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Højre kort -->\n\n        <div class=\"relative cursor-pointer\">\n          <div\n            v-if=\"rightCard\"\n            class=\"w-[550px] h-[327px]\"\n            @click=\"toggleModule('right')\"\n          >\n            <img\n              :src=\"rightCard.src\"\n              :alt=\"rightCard.alt\"\n              class=\"cardContainer w-[550px] absolute z-3\"\n              :class=\"{ clicked: showRightModule }\"\n            />\n            <div>\n              <div\n                class=\"w-[550px] h-[327px] bg-secondary-variant absolute top-0 ml-[10px] mt-[10px] z-2\"\n              ></div>\n              <div\n                class=\"w-[550px] h-[327px] bg-secondary absolute top-0 ml-[20px] mt-[20px] z-1\"\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\ndefineProps({\n  leftCard: Object,\n  rightCard: Object,\n  leftModule: Object,\n  rightModule: Object,\n  mobileImages: Array,\n  laptopImages: Array,\n  mobileVideo: Object,\n  laptopVideo: Object,\n});\n\n// 'ref' bruges til at lave en reaktiv variabel 'isMobile', der som udgangspunkt er falsk.\nconst isMobile = ref(false);\n\n// Funktionen updateIsMobile ser på bredden (clientWidth) af den synlige del af HTML-dokumentet.\n// Hvis bredden er under 768 pixels, betragtes det som en mobilskærm, og 'isMobile' opdateres til sand.\nconst updateIsMobile = () => {\n  isMobile.value = document.documentElement.clientWidth < 768;\n};\n\nonMounted(() => {\n  updateIsMobile(); // Opdaterer ved start, baseret på vinduets bredde\n  window.addEventListener(\"resize\", updateIsMobile); // Lytter efter vinduesændringer\n});\n\nconst showLeftModule = ref(false);\nconst showRightModule = ref(false);\n\n// Funktionen tager en parameter 'side', som angiver, om det er venstre eller højre modul, der skal \"toggles\".\n// Afhængigt af 'side' ændres værdierne af 'showLeftModule' og 'showRightModule', og sørger for, at kun ét af modulerne er synligt ad gangen.\n\nconst toggleModule = (side) => {\n  let elementToScrollTo;\n\n  if (side === \"left\") {\n    showLeftModule.value = !showLeftModule.value;\n    if (showLeftModule.value && showRightModule.value) {\n      showRightModule.value = false;\n    }\n    // Hvis 'showLeftModule' er 'true' vil siden ved hjælp af 'document.querySelector' finde elementet 'c-card-module'.\n    // Når/hvis elementet er fundet vil siden scrolle ned til elementet så det er indenfor viewport.\n    if (showLeftModule.value) {\n      elementToScrollTo = document.querySelector(\".c-card-module\");\n    }\n  } else if (side === \"right\") {\n    showRightModule.value = !showRightModule.value;\n    if (showRightModule.value && showLeftModule.value) {\n      showLeftModule.value = false;\n    }\n    // Hvis 'showRightModule' er 'true' vil siden ved hjælp af 'document.querySelector' finde elementet 'c-card-module'.\n    // Når/hvis elementet er fundet vil siden scrolle ned til elementet så det er indenfor viewport.\n    if (showRightModule.value) {\n      elementToScrollTo = document.querySelector(\".c-card-module\");\n    }\n  }\n\n  // Scroller hvis elementet er defineret\n  if (elementToScrollTo) {\n    elementToScrollTo.scrollIntoView({ behavior: \"smooth\" });\n  }\n};\n\nconst videoPlayer = ref(null);\n\nconst toggleVideo = () => {\n  if (videoPlayer.value.paused) {\n    videoPlayer.value.play();\n  } else {\n    videoPlayer.value.pause();\n  }\n};\n</script>\n\n<style scoped>\n.cardContainer {\n  transition: transform 0.2s ease-in-out;\n}\n\n.cardContainer:hover {\n  transform: translateY(-20px);\n}\n\n.cardContainer.clicked {\n  transform: translateY(-80px);\n}\n</style>\n","<template>\n  <div class=\"notToScale bg-primary\">\n    <!-- MOBIL -->\n    <div v-if=\"isMobile\" class=\"flex flex-col gap-y-[165px] pb-[165px]\">\n      <PageHero v-bind=\"{ ...page.hero }\" :teaserMaxWidth=\"teaserMaxWidth\" />\n      <VideoStaggered v-bind=\"{ ...page.staggeredVideo }\" />\n      <ScrollGallery v-bind=\"{ ...page.scrollGallery }\" />\n      <CardModule v-bind=\"{ ...page.cardModule }\" />\n      <ImageGallery v-bind=\"{ ...page.imageGallery }\" :sliceAmount=\"3\" />\n      <ImageLong v-bind=\"{ ...page.longImage }\" />\n    </div>\n\n    <!-- LAPTOP -->\n    <div v-else class=\"flex flex-col gap-y-[360px] pb-[360px]\">\n      <PageHero v-bind=\"{ ...page.hero }\" :teaserMaxWidth=\"teaserMaxWidth\" />\n      <VideoStaggered v-bind=\"{ ...page.staggeredVideo }\" />\n      <ScrollGallery v-bind=\"{ ...page.scrollGallery }\" />\n      <CardModule v-bind=\"{ ...page.cardModule }\" />\n      <ImageSlider v-bind=\"{ ...page.imageSlider }\" />\n      <ImageLong v-bind=\"{ ...page.longImage }\" />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport pageData from \"/pageData.json\";\nimport VideoStaggered from \"../components/VideoStaggered.vue\";\nimport PageHero from \"../components/PageHero.vue\";\nimport ScrollGallery from \"../components/ScrollGallery.vue\";\nimport CardModule from \"../components/CardModule.vue\";\nimport ImageSlider from \"../components/ImageSlider.vue\";\n\nconst page = ref(pageData.notToScale);\n\nconst teaserMaxWidth = ref(\"max-w-23ch\");\n\n// 'ref' bruges til at lave en reaktiv variabel 'isMobile', der som udgangspunkt er falsk.\nconst isMobile = ref(false);\n\n// Funktionen updateIsMobile ser på bredden (clientWidth) af den synlige del af HTML-dokumentet.\n// Hvis bredden er under 768 pixels, betragtes det som en mobilskærm, og 'isMobile' opdateres til sand.\nconst updateIsMobile = () => {\n  isMobile.value = document.documentElement.clientWidth < 768;\n};\n\nonMounted(() => {\n  updateIsMobile(); // Opdaterer ved start, baseret på vinduets bredde\n  window.addEventListener(\"resize\", updateIsMobile); // Lytter efter vinduesændringer\n});\n</script>\n\n<style></style>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBM,UAAA,WAAW,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyBN,QAAI,IAAI;AAWtB,UAAA,WAAW,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiMpB,UAAA,WAAW,IAAI,KAAK;AAapB,UAAA,iBAAiB,IAAI,KAAK;AAC1B,UAAA,kBAAkB,IAAI,KAAK;AAoCb,QAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChRtB,UAAA,OAAO,IAAI,SAAS,UAAU;AAE9B,UAAA,iBAAiB,IAAI,YAAY;AAGjC,UAAA,WAAW,IAAI,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}